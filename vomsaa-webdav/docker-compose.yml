volumes:
  db_data:
  trustanchors:
  cabundle:
  vomsdir:
  certs:
  storage:

services:

  db:
    image: ${DB_IMAGE}:${DB_IMAGE_TAG}
    container_name: db
    hostname: db
    volumes:
     - db_data:/var/lib/mysql
     - ../iam-db/iam-test-dump.sql:/docker-entrypoint-initdb.d/iam-test-dump.sql
    
    env_file:
      - ../iam-db/db.env

    ports:
      - "3307:3307"

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "3307", "--silent"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 0s

  trust:
    build:
      context: ../trust
    volumes:
      - trustanchors:/trust-anchors
      - cabundle:/etc/pki
      - certs:/certs
      - vomsdir:/vomsdir

  nginx:
    image: ${NGINX_VOMS_IMAGE}:${NGINX_VOMS_IMAGE_TAG}

    depends_on: 
      vomsaa:
        condition: service_started
      trust:
        condition: service_completed_successfully
    
    environment:
      TZ: Europe/Rome
      X509_VOMS_DIR: /vomsdir

    ports:
      - "8445:8445"

    volumes:
      - cabundle:/etc/pki
      - trustanchors:/etc/grid-security/certificates
      - certs:/certs
      - vomsdir:/etc/grid-security/vomsdir
      - ./vomsaa/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./vomsaa/nginx/conf.d/voms.conf:/etc/nginx/conf.d/voms.conf:ro

    networks:
      default:
        aliases:
          - voms.test.example

  vomsaa:
    image: ${VOMS_AA_IMAGE}:${VOMS_AA_IMAGE_TAG}
    
    env_file:
      - ./vomsaa/voms.env      

    ports:
      - "1046:1046"
    
    depends_on:
      db:
        condition: service_healthy

    volumes:
      - ./vomsaa/application-mysql.yml:/workspace/config/application-mysql.yml:ro
      - ./vomsaa/application-voms.yml:/workspace/config/application-voms.yml:ro
      - certs:/certs:ro
      - trustanchors:/etc/grid-security/certificates

  storage-setup:
    image: ${WEBDAV_IMAGE}:${WEBDAV_IMAGE_TAG}
    environment:
      TZ: UTC

    volumes:
      - storage:/storage
      - ./scripts:/scripts:ro
      - ./webdav/etc/storm/webdav/sa.d/:/etc/storm/webdav/sa.d/:ro
    
    user: root
    entrypoint:
      - /scripts/init-storage.sh

  webdav:
    image: ${WEBDAV_IMAGE}:${WEBDAV_IMAGE_TAG}
    ports:
      - "8443:8443"
      - "8085:8085"

    depends_on:
      trust:
        condition: service_completed_successfully
      storage-setup:
        condition: service_completed_successfully

    env_file:
      - ./webdav/webdav.env 

    volumes:
      - storage:/storage
      - cabundle:/etc/pki
      - trustanchors:/etc/grid-security/certificates
      - certs:/etc/grid-security/storm-webdav/:ro 
      - vomsdir:/etc/grid-security/vomsdir
      - ./vomsdir/indigo-dc:/etc/grid-security/vomsdir/indigo-dc
      - ./webdav/etc/storm/webdav/sa.d/:/etc/storm/webdav/sa.d/:ro
      - ./webdav/etc/storm/webdav/config/application-policies.yml:/app/application-policies.yml:ro
      - ./webdav/etc/storm/webdav/config/application-issuers.yml:/app/application-issuers.yml:ro

    networks:
      default:
        aliases:
          - storm.test.example
          
  clients:
    image: ${GRID_CLIENTS_IMAGE}:${GRID_CLIENTS_IMAGE_TAG}
    environment:
      TZ: Europe/Rome

    env_file:
      - oidc-agent/oidc-agent.env

    depends_on:
      trust:
        condition: service_completed_successfully

    volumes:
      - cabundle:/etc/pki
      - trustanchors:/etc/grid-security/certificates
      - vomsdir:/etc/grid-security/vomsdir
      - certs:/certs
      - ./vomsdir/indigo-dc:/etc/grid-security/vomsdir/indigo-dc
      - ./vomsaa/vomses:/etc/vomses
      - ./scripts:/scripts:ro
      - ./oidc-agent:/home/test/.config/oidc-agent

    entrypoint:  sleep infinity

    networks:
      default:
